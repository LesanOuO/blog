<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>多线程 on Lesan&#39;s Blog</title>
    <link>https://lesanouo.github.io/blog/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <description>Recent content in 多线程 on Lesan&#39;s Blog</description>
    <generator>Hugo -- 0.147.7</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 26 Nov 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lesanouo.github.io/blog/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>多线程下的琐事</title>
      <link>https://lesanouo.github.io/blog/posts/166939200004/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/166939200004/</guid>
      <description>&lt;p&gt;单线程与多线程可以看作是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;单线程为在一个单向行驶的道路上，每辆汽车都遵守交通规则&lt;/li&gt;
&lt;li&gt;多线程为多条车道，这样在同一时间内，通行的车辆数远远大于单车道&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然而扩充了车道后问题就没那么简单了，车道一旦多起来&lt;strong&gt;加塞&lt;/strong&gt;的场景就会越来越多，出现碰撞后也会影响整条马路的通行效率，这样多车道就不一定比单车道更快了&lt;/p&gt;</description>
    </item>
    <item>
      <title>生产者与消费者问题</title>
      <link>https://lesanouo.github.io/blog/posts/165193920001/</link>
      <pubDate>Sun, 08 May 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/165193920001/</guid>
      <description>&lt;p&gt;生产者消费者问题（Producer-consumer problem），也称有限缓冲问题（Bounded-buffer problem），是一个多线程同步问题的经典案例。生产者生成一定量的数据放到缓冲区中，然后重复此过程；与此同时，消费者也在缓冲区消耗这些数据。生产者和消费者之间必须保持同步，要保证生产者不会在缓冲区满时放入数据，消费者也不会在缓冲区空时消耗数据。不够完善的解决方法容易出现死锁的情况，此时进程都在等待唤醒。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
