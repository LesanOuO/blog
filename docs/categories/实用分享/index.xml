<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>实用分享 on Lesan&#39;s Blog</title>
    <link>https://lesanouo.github.io/blog/categories/%E5%AE%9E%E7%94%A8%E5%88%86%E4%BA%AB/</link>
    <description>Recent content in 实用分享 on Lesan&#39;s Blog</description>
    <generator>Hugo -- 0.147.7</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 13 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://lesanouo.github.io/blog/categories/%E5%AE%9E%E7%94%A8%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>dynamic-datasource文档</title>
      <link>https://lesanouo.github.io/blog/posts/174974400001/</link>
      <pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/174974400001/</guid>
      <description>&lt;p&gt;本文为 &lt;code&gt;dynamic-datasource-spring-boot-starter&lt;/code&gt; （基于SpringBoot的快速集成多数据源框架）的使用文档。&lt;/p&gt;
&lt;h1 id=&#34;特性&#34;&gt;特性&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;支持 &lt;code&gt;数据源分组&lt;/code&gt; ，适用于多种场景，纯粹多库、读写分离、一主多从、混合模式。&lt;/li&gt;
&lt;li&gt;支持数据库敏感配置信息 &lt;code&gt;加密(可自定义)&lt;/code&gt; ENC()。&lt;/li&gt;
&lt;li&gt;支持每个数据库独立初始化表结构schema和数据库database。&lt;/li&gt;
&lt;li&gt;支持无数据源启动，支持 &lt;code&gt;懒加载数据源&lt;/code&gt; （需要的时候再创建连接）。&lt;/li&gt;
&lt;li&gt;支持 &lt;code&gt;自定义注解&lt;/code&gt; ，需继承DS(3.2.0+)。&lt;/li&gt;
&lt;li&gt;提供并简化对Druid，HikariCp，BeeCp，Dbcp2的快速集成。&lt;/li&gt;
&lt;li&gt;提供对 &lt;code&gt;Mybatis-Plus&lt;/code&gt; ，Quartz，ShardingJdbc，P6sy，Jndi等组件的集成方案。&lt;/li&gt;
&lt;li&gt;提供 &lt;code&gt;自定义数据源来源&lt;/code&gt; 方案（如全从数据库加载）。&lt;/li&gt;
&lt;li&gt;提供项目启动后 &lt;code&gt;动态增加移除数据源&lt;/code&gt; 方案。&lt;/li&gt;
&lt;li&gt;提供Mybatis环境下的 &lt;code&gt;纯读写分离&lt;/code&gt; 方案。&lt;/li&gt;
&lt;li&gt;提供使用 &lt;code&gt;spel动态参数&lt;/code&gt; 解析数据源方案。内置spel，session，header，支持自定义。&lt;/li&gt;
&lt;li&gt;支持 &lt;code&gt;多层数据源嵌套切换&lt;/code&gt; 。（ServiceA &amp;raquo;&amp;gt; ServiceB &amp;raquo;&amp;gt; ServiceC）。&lt;/li&gt;
&lt;li&gt;提供 &lt;code&gt;基于seata的分布式事务方案&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;提供 &lt;code&gt;本地多数据源事务方案&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;约定&#34;&gt;约定&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;dynamic-datasource只做 &lt;code&gt;切换数据源&lt;/code&gt; 这件核心的事情，并 &lt;code&gt;不限制你的具体操作&lt;/code&gt; ，切换了数据源可以做任何CRUD。&lt;/li&gt;
&lt;li&gt;配置文件所有以下划线 &lt;code&gt;_&lt;/code&gt; 分割的数据源 &lt;code&gt;首部&lt;/code&gt; 即为组的名称，相同组名称的数据源会放在一个组下。&lt;/li&gt;
&lt;li&gt;切换数据源可以是组名，也可以是具体数据源名称。 &lt;code&gt;组名则切换时采用负载均衡算法切换&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;默认的数据源名称为 &lt;code&gt;master&lt;/code&gt; ，你可以通过 &lt;code&gt;spring.datasource.dynamic.primary&lt;/code&gt; 修改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;方法上的注解优先于类上注解&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;DS支持继承抽象类上的DS，暂不支持继承接口上的DS。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;使用方法&#34;&gt;使用方法&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;引入dynamic-datasource-spring-boot-starter&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;spring-boot 1.5.x、2.x.x&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于.NET的面试笔记</title>
      <link>https://lesanouo.github.io/blog/posts/166939200003/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/166939200003/</guid>
      <description>&lt;h2 id=&#34;net-基础&#34;&gt;.net 基础&lt;/h2&gt;
&lt;p&gt;1、Task和Thread有什么区别&lt;/p&gt;
&lt;p&gt;2、当执行遇到await的时候会执行什么动作&lt;/p&gt;
&lt;p&gt;3、事件和委托之间的区别，Action和func的区别&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/RaindayXia/p/5261797.html&#34;&gt;https://www.cnblogs.com/RaindayXia/p/5261797.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://mikeblog.cn/article/details/5236&#34;&gt;http://mikeblog.cn/article/details/5236&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4、Dictionary在多线程并发的情况下会出现什么问题，ConcurrentDictionary之间的区别&lt;/p&gt;</description>
    </item>
    <item>
      <title>设置网络代理后需要注意</title>
      <link>https://lesanouo.github.io/blog/posts/166939200002/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/166939200002/</guid>
      <description>&lt;p&gt;如电脑设置了网络代理，会导致一些软件工具不能正常工作。查找了网上许多解决方案，总结如下。&lt;/p&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;设置全局Config代理&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy http://server:port
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy http://server:port
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.https://github.com.proxy http://server:port
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.https://github.com.proxy http://server:port
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;去除代理设置&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset https.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.https://github.com.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset https.https://github.com.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;当我使用这种方式时没有效果&lt;/p&gt;</description>
    </item>
    <item>
      <title>通过SQL导出数据库表结构</title>
      <link>https://lesanouo.github.io/blog/posts/166939200001/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/166939200001/</guid>
      <description>&lt;p&gt;在编写数据库文档时，我们常常需要写表结构文档，这时候就需要一些方法来节约我们写文档的时间。&lt;/p&gt;
&lt;p&gt;我通过网络上的资料，总结了 &lt;code&gt;MySQL&lt;/code&gt; 及 &lt;code&gt;SQL Server&lt;/code&gt; 的通过SQL语句导出数据库表结构的方法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分享可私有部署的接口管理系统Yapi</title>
      <link>https://lesanouo.github.io/blog/posts/164891520001/</link>
      <pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/164891520001/</guid>
      <description>&lt;p&gt;在 web 软件开发中，API接口管理非常重要，也是前后端对接的关键，这里分享一个非常好用且可以私有化部署的接口管理系统Yapi，对那些内网开发的小伙伴们是一个不错的选择。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hugo个人静态网页生成</title>
      <link>https://lesanouo.github.io/blog/posts/160269120001/</link>
      <pubDate>Thu, 15 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/160269120001/</guid>
      <description>&lt;h3 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h3&gt;
&lt;p&gt;到 &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt; 下载对应的操作系统版本的Hugo二进制文件（hugo或者hugo.exe）&lt;/p&gt;
&lt;p&gt;Mac下直接使用 &lt;code&gt;Homebrew&lt;/code&gt; 安装：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;生成站点&#34;&gt;生成站点&lt;/h3&gt;
&lt;p&gt;使用Hugo快速生成站点，比如希望生成到 &lt;code&gt;/path/to/site&lt;/code&gt; 路径：&lt;/p&gt;</description>
    </item>
    <item>
      <title>搭建个人网站:GitHub&#43;Vercel</title>
      <link>https://lesanouo.github.io/blog/posts/160260480001/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://lesanouo.github.io/blog/posts/160260480001/</guid>
      <description>&lt;p&gt;本文主要介绍如何通过GitHub+Vercel免费搭建一个自己的静态网页。&lt;/p&gt;
&lt;h3 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h3&gt;
&lt;p&gt;GitHub Pages是GitHub提供给大家的快速部署静态网页的功能，但是由于国内访问比较慢，这里提供一个相对较快的解决办法，就是用GitHub+Vercel。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
